
<!--Converted with LaTeX2HTML 2008 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Turing</TITLE>
<META NAME="description" CONTENT="Turing">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2008">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Turing</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Some interesting documents have recently been found in the ACM archives. These documents contain an 
account of the original version of the ACM ICPC competition, which took place in Bletchley Park, 
England, in the year 1943. 

<P>
In this original contest, programs submitted by contestants were executed in a simplified version of 
the so-called deterministic Turing Machine, which undoubtedly most of you are familiar with. In this 
simplified version, the tape is not infinitely long. Instead, tape cells are numbered 0 to <SPAN CLASS="MATH">10<SUP>3</SUP> - 1</SPAN> 
(inclusive), from left to right. Also, the alphabet used is the unary alphabet, meaning that, prior to 
the execution of the program, the tape will be initialized with the string consisting of <SPAN CLASS="MATH"><I>n</I></SPAN> ones 
followed by all zeroes, where <SPAN CLASS="MATH"><I>n</I></SPAN> is the numerical value of the input, and after execution the tape 
contents should be <SPAN CLASS="MATH"><I>m</I></SPAN> ones followed by all zeroes, where <SPAN CLASS="MATH"><I>m</I></SPAN> is the numerical value of the corresponding 
output. In the beginning, the tape head is at position 0, and states are also numbered starting with 
0, which is assumed to be the initial state. The machines work as usual: for every machine state <SPAN CLASS="MATH"><I>q</I></SPAN> and 
every bit <SPAN CLASS="MATH"><I>c</I></SPAN> (0 or 1), there is at most one rule determining what the next state will be if the symbol 
at the position of the tape head is <SPAN CLASS="MATH"><I>c</I></SPAN> and the current state is <SPAN CLASS="MATH"><I>q</I></SPAN>; the rule also specifies the symbol 
to write at the current position and in which direction the head should move. When no rule applies, 
the machine stops. 

<P>
Your task will be to write a program that receives one of the Turing machines 
submitted by the contestants, as well as the test cases used (input and output pairs), and returns a 
verdict about the machine's results for each of the cases. Note that in this original contest, unlike 
the current one, there was a different verdict for each test case, instead of a general one.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input consists of a series of specifications (at most 30) of a Turing Machine and of the corresponding test cases. 

<P>
The structure of each test case is the following: 

<P>
The first line contains <!-- MATH
 $1 \le N \le 1000$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="11711img1.png"
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="11711img1.png"
 ALT="$ \le$">1000</SPAN>, the number of rules for the machine, and <!-- MATH
 $1 \le M \le 100$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="11711img1.png"
 ALT="$ \le$"><I>M</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="11711img1.png"
 ALT="$ \le$">100</SPAN>, the number of test cases for the Turing Machine. 

<P>
<SPAN CLASS="MATH"><I>N</I></SPAN> lines follow, each one containing a rule, in the format <!-- MATH
 $q_{prev} \ c_{prev} \ q_{next} \ c_{next} \ mov$
 -->
<SPAN CLASS="MATH"><I>q</I><SUB>prev</SUB>&nbsp;<I>c</I><SUB>prev</SUB>&nbsp;<I>q</I><SUB>next</SUB>&nbsp;<I>c</I><SUB>next</SUB>&nbsp;<I>mov</I></SPAN>. <SPAN CLASS="MATH"><I>q</I><SUB>prev</SUB></SPAN> is the state of the machine before the rule is applied, <SPAN CLASS="MATH"><I>c</I><SUB>prev</SUB></SPAN> is the content 
(either 0 or 1) of the tape at the current position <SPAN CLASS="MATH"><I>p</I></SPAN> before the rule is applied, <SPAN CLASS="MATH"><I>q</I><SUB>next</SUB></SPAN> is the state 
of the machine after the rule is applied, <SPAN CLASS="MATH"><I>c</I><SUB>next</SUB></SPAN> is the content of position <SPAN CLASS="MATH"><I>p</I></SPAN> after the rule is 
applied, and <SPAN CLASS="MATH"><I>mov</I></SPAN> is the direction in which the tape head moves one step after applying the rule (``<TT>L</TT>'' if it moves to the left and ``<TT>R</TT>'' if it moves to the right). The states should be integers between 0 and 1000, inclusive. The Turing machine should be deterministic; that is, there should be at most one 
transition from any pair <!-- MATH
 $(q_{prev}, c_{prev})$
 -->
<SPAN CLASS="MATH">(<I>q</I><SUB>prev</SUB>, <I>c</I><SUB>prev</SUB>)</SPAN>, and should not be repeated in your output. 

<P>
After this, <SPAN CLASS="MATH"><I>M</I></SPAN> lines follow, each one containing two space-separated numbers, <SPAN CLASS="MATH"><I>X</I></SPAN> and <SPAN CLASS="MATH"><I>Y</I></SPAN>, <!-- MATH
 $1 \le X, Y \le 1000$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="11711img1.png"
 ALT="$ \le$"><I>X</I>, <I>Y</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="11711img1.png"
 ALT="$ \le$">1000</SPAN>. <SPAN CLASS="MATH"><I>X</I></SPAN> is the value of the input to the program, and <SPAN CLASS="MATH"><I>Y</I></SPAN> is the value of the expected output. 

<P>
The end of input is signaled by a case with <SPAN CLASS="MATH"><I>N</I> = 0</SPAN> and <SPAN CLASS="MATH"><I>M</I> = 0</SPAN>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
Your output should be `<TT>MLE</TT>' if the machine attempts to access any cell outside the tape range specified 
above; `<TT>TLE</TT>' if it runs for at least 104 iterations without stopping or causing an MLE error; `<TT>WA</TT>' if the
machine stops but returns an incorrect result, and `<TT>AC</TT>' if the machine stops and returns the expected result. The output for each case should go in a different line.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
6 3
0 1 1 0 R
0 0 0 0 R
1 1 1 1 R
1 0 2 1 L
2 1 2 1 L
2 0 900 1 R
1 3
300 301
0 1
0 0
</PRE> 

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
WA
AC
MLE
</PRE> 

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>
