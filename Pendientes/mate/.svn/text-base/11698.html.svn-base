<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>J - Code Permutations</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="problem.css">
</head>
<body>

<h1>Problem J - Code Permutations</h1>
<h3>Time limit: X seconds</h3>
<!-- author: Jon Marius Venstad -->

<img src="p11698.jpg" />
<p>
You are soon to graduate from the mathemagician school of Hagworts,
and you're quite content with yourself; all the hard work and elbowing
has finally paid off. Being successful at most of your endeavors you
would normally end up a herald of sound reasoning and good
mathemagics. You, however, are different; not only have you spent your
young years secretly hacking away at computers, writing code to do
your assigned routine homework for you, but of late you have started
planning how to cram all your mathemagical skills into a computer to
completely eliminate the need for mathemagicians! To show the others
just how great a visionary you are, you plan to make your graduation
ceremony something they will never forget.

<p>
To do this you need to break into the safe of your arch-nemesis, Hairy
Peter.  The safe is locked by a code mechanism: All natural numbers
from <i>1</i> to <i>N</i> need to be typed in in the correct order,
set by Hairy Peter.  Fortunately you know that Hairy, being a good
mathemagician, has a certain weakness; he has a rather unhealthy
obsession with the number <i>K</i>.  (For instance he always has to
introduce himself <i>K</i> times whenever he meets new people, making
him quite annoying to be around.) Thus you are certain that his code,
when viewed as a permutation of the <i>N</i> first naturals, has order
exactly <i>K</i>.  (i.e. <i>K</i> is the smallest positive number such
that if you <i>K</i> times replace <i>x &isin; {1, ..., N}</i> with
the position of <i>x</i> in Hairy's code, you end up with the <i>x</i>
you started with, for all <i>x</i>. Thus e.g. the order of the
permutation corresponding to the code <i>2&nbsp;3&nbsp;1</i> is <i>3</i>,
as <i>1 &rarr; 3 &rarr; 2 &rarr; 1</i> and <i>2 &rarr; 1 &rarr; 3
&rarr; 2</i> and <i>3 &rarr; 2 &rarr; 1 &rarr; 3</i>.)  While this
does not help you directly, it greatly reduces the number of code
inputs you may have to try before you find the correct one. "How
many?" is the question you are pondering right now. You must know the
exact number, lest you risk preparing too little time for cracking the
safe.

<p>
Now you also have a certain mathemagical weakness -- arguably a bit
worse than Hairy Peter's: Because of your dark scheme to program
mathemagical computers, you insist there are no numbers greater than
what can be represented by a signed 32-bit integer, namely the prime
<i>P = 2<sup>31</sup>-1</i>.  Of course there must be nothing your
computers cannot count. In fact you hate this upper limit <i>P</i> so
intensely that you have decided to make a new mathemagics
where <i>P</i> equals <i>0</i>. Ha, take that! (Well, you are quite
aware that you are really just counting modulo <i>P</i>, but it will
have to suffice until you find better ways of punishing <i>P</i>.) In
fact this turns out to be quite an advantage for you! For instance, if
the number of code permutations you have to check turns out to be
2<sup>31</sup>, there will actually be just one permutation for you to
check, as 2<sup>31</sup> mod <i>P</i> = 1.  (Or at least you think
so...) That's just magnificent!

<h2>Input</h2>
<p>
The first line of the input file contains an integer T (T<30) which denotes the total number of input sets.
The description of each set is given below:<br><br>

Input for each set consists of two integers <i>N&nbsp;(1 &le; N &le; 100)</i>
and <i>K&nbsp;(1 &le; K &le; 2<sup>31</sup>-1)</i> respectively.

<h2>Output</h2>
<p>
For each case of input, print in a single line the number of permutations of <i>N</i> elements of order <i>K</i>,
modulo <i>2<sup>31</sup>-1</i>. Look at the sample output for details.

<div class="sample">
<h2>Sample Input</h2>
<pre>
3
3 2
6 6
15 12
</pre>
</div>

<div class="sample">
<h2>Sample Output</h2>
<pre>
3
240
1789014075

</pre>
</div>

<div class="source">
The 2009 ACM Nordic Collegiate Programming Contest
</div>

</body>
</html>
